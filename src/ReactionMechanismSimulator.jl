import Logging
Logging.disable_logging(Logging.Warn)

module ReactionMechanismSimulator
    using PyCall
    push!(PyVector(pyimport("sys")["path"]), "")
    const Chem = PyNULL()
    const Desc = PyNULL()
    const molecule = PyNULL()
    const fragment = PyNULL()
    const pydot = PyNULL()
    const chemkin =PyNULL()
    const species = PyNULL()
    const reaction = PyNULL()
    const nasa = PyNULL()
    const wilhoit = PyNULL()
    const arrhenius = PyNULL()
    const falloff = PyNULL()
    const chebyshev = PyNULL()
    const solvation = PyNULL()
    const os = PyNULL()
    function __init__()
        copy!(Chem,pyimport_conda("rdkit.Chem","rdkit","rmg"))
        copy!(Desc,pyimport_conda("rdkit.Chem.Descriptors","rdkit","rmg"))
        try
            copy!(molecule,pyimport("rmgpy.molecule"))
            copy!(chemkin,pyimport("rmgpy.chemkin"))
            copy!(species,pyimport("rmgpy.species"))
            copy!(reaction,pyimport("rmgpy.reaction"))
            copy!(nasa,pyimport("rmgpy.thermo.nasa"))
            copy!(wilhoit,pyimport("rmgpy.thermo.wilhoit"))
            copy!(arrhenius,pyimport("rmgpy.kinetics.arrhenius"))
            copy!(falloff,pyimport("rmgpy.kinetics.falloff"))
            copy!(chebyshev,pyimport("rmgpy.kinetics.chebyshev"))
            copy!(solvation,pyimport("rmgpy.data.solvation"))
            copy!(fragment,pyimport("rmgpy.molecule.fragment"))
        catch e
            copy!(molecule,pyimport_conda("molecule.molecule","rmgmolecule","mjohnson541"))
            copy!(chemkin,pyimport_conda("molecule.chemkin","rmgmolecule","mjohnson541"))
            copy!(species,pyimport_conda("molecule.species","rmgmolecule","mjohnson541"))
            copy!(reaction,pyimport_conda("molecule.reaction","rmgmolecule","mjohnson541"))
            copy!(nasa,pyimport_conda("molecule.thermo.nasa","rmgmolecule","mjohnson541"))
            copy!(wilhoit,pyimport_conda("molecule.thermo.wilhoit","rmgmolecule","mjohnson541"))
            copy!(arrhenius,pyimport_conda("molecule.kinetics.arrhenius","rmgmolecule","mjohnson541"))
            copy!(falloff,pyimport_conda("molecule.kinetics.falloff","rmgmolecule","mjohnson541"))
            copy!(chebyshev,pyimport_conda("molecule.kinetics.chebyshev","rmgmolecule","mjohnson541"))
            copy!(solvation,pyimport_conda("molecule.data.solvation","rmgmolecule","mjohnson541"))
            copy!(fragment,pyimport_conda("molecule.molecule.fragment","rmgmolecule","mjohnson541"))
        end
        copy!(pydot,pyimport_conda("pydot","pydot"))
        copy!(os,pyimport_conda("os","os"))
    end
    include("Constants.jl")
    include("Tools.jl")
    include("Calculators/RateUncertainty.jl")
    include("Calculators/ThermoUncertainty.jl")
    include("Calculators/Thermo.jl")
    include("Calculators/Diffusion.jl")
    include("Calculators/Rate.jl")
    include("Calculators/Viscosity.jl")
    include("Calculators/Thermovec.jl")
    include("Calculators/Ratevec.jl")
    include("Calculators/kLAkH.jl")
    include("Species.jl")
    include("Solvent.jl")
    include("Reaction.jl")
    include("Phase.jl")
    include("PhaseState.jl")
    include("Interface.jl")
    include("Domain.jl")
    include("yml.jl")
    include("Parse.jl")
    include("ModelReduction.jl")
    include("Reactor.jl")
    include("ThreadedSensitivities.jl")
    include("Simulation.jl")
    include("TransitorySensitivities.jl")
    include("AutomaticMechanismAnalysis.jl")
    include("EdgeAnalysis.jl")
    include("Debugging.jl")
    include("Plotting.jl")
    include("fluxdiagrams.jl")
end
